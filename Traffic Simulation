# -*- coding: utf-8 -*-
"""
Created on Sat Feb  1 18:44:37 2020

@author: User
"""
import random
import numpy as np
import time
Vmax=5
v=np.random.rand(30) #generate random velocities
v2=np.round(v*Vmax,decimals=0)
print(v2)

positions=random.sample(range(300), 30)
print(positions)
x_grid=np.empty(300)
print(x_grid)
car=np.vstack((positions,v2))

print(car)

print(car.shape)
print(x_grid.shape)
for i in positions:
    j=int(i)
    print(j)
    x_grid[j]=1

print(x_grid)



def new_velocity(car,x_grid):
    for i in range(3):
        print(car[1,i])
        print(car[0,i])
        print(x_grid[int(car[0,i])])
        if car[1,i]<Vmax:
            
            car[1,i]=car[1,i]+1 #increase velocity by 1
            print("new velocity " + str(car[1,i]))
            overtake = True
            
            
                
            
            for j in range(1,int(car[1,i])+1):
                j1=j+1 #seeker
                print(j)
                print(j1)
                print(x_grid[int(car[0,i])+j])
                print(x_grid[int(car[0,i])+j1])
                if car[0,i]+j<299:

                    if j1>car[1,i]:
                        print("unobstructed drive")
                        car[0,i]=car[0,i]+car[1,i]    
                        x_grid[int(car[0,i])]=0
                        x_grid[int(car[0,i])+int(car[1,i])]=1
                        break
                    
                    if x_grid[int(car[0,i])+j] ==1 :
                        print("car in front ")
                        car[1,i]=0
                        break
                    
                    elif x_grid[int(car[0,i])+j] !=1 and x_grid[int(car[0,i])+j1] !=1 : 
                        print(" we can keep driving")
                        overtake= True
                 
                    elif x_grid[int(car[0,i])+j] !=1 and x_grid[int(car[0,i])+j1] ==1 :
                        print("Space occupied in front ")
                        overtake=False
                        x_grid[int(car[0,i])]=0
                        x_grid[int(car[0,i])+j]=1 
                        car[1,i]=j
                        car[0,i]=car[0,i]+j
                        break
                    

            #future_space=(car[0,i]+car[1,i])
        elif car[1,i]==Vmax:    
            overtake = True
            for j in range(1,int(car[1,i])+1):
                j1=j+1 #seeker
                print(j)
                print(j1)
                print(x_grid[int(car[0,i])+j])
                print(x_grid[int(car[0,i])+j1])
                if car[0,i]+j<299:
                    if j1>car[1,i]:
                        print("unobstructed drive")
                        car[0,i]=car[0,i]+car[1,i]    
                        x_grid[int(car[0,i])]=0
                        x_grid[int(car[0,i])+int(car[1,i])]=1
                        break
                    if x_grid[int(car[0,i])+j] ==1 :
                        print("car in front ")
                        car[1,i]=0
                        break
                    
                    elif x_grid[int(car[0,i])+j] !=1 and x_grid[int(car[0,i])+j1] !=1 : 
                        print(" we can keep driving")
                        overtake= True
                 
                    elif x_grid[int(car[0,i])+j] !=1 and x_grid[int(car[0,i])+j1] ==1 :
                        print("Space occupied in front ")
                        overtake=False
                        x_grid[int(car[0,i])]=0
                        x_grid[int(car[0,i])+j]=1 
                        car[1,i]=j
                        car[0,i]=car[0,i]+j
                        break
             


        print("new velocity " + str(car[1,i]))
        print("new position " + str(car[0,i]))
        
    return car, x_grid    

z=new_velocity(car,x_grid)      
          
